this is my current code : 
```
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>KSP - Pong</title>
  </head>
  <body>
    <div class="container-pong"></div>
    <script></script>
  </body>
</html>
```
please help me make a pong game
1. please make a black background that is landscape
2. please make a while line that is in the middle of the landscape
3. please make 2 while player on opposite sides of the pong board
4. please make a ball that will move and have the physics of a pong ball




this is my current code : 
```
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>KSP - Pong</title>
    <style>
      body {
        margin: 0;
        overflow: hidden; /* Hide scrollbars */
        background-color: black; /* Black background */
      }
      .container-pong {
        position: relative;
        width: 100vw;
        height: 100vh;
      }
      .middle-line {
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: white;
        transform: translateY(-1px); /* Adjust position to center vertically */
      }
      .player {
        position: absolute;
        width: 10px;
        height: 80px;
        background-color: white;
      }
      .player-left {
        left: 10px; /* Distance from left edge */
      }
      .player-right {
        right: 10px; /* Distance from right edge */
      }
      .ball {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: white;
        border-radius: 50%; /* Round ball */
      }
    </style>
  </head>
  <body>
    <div class="container-pong">
      <div class="middle-line"></div>
      <div class="player player-left"></div>
      <div class="player player-right"></div>
      <div class="ball"></div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const container = document.querySelector(".container-pong");
        const ball = document.querySelector(".ball");
        const players = document.querySelectorAll(".player");

        // Initial ball position and speed
        let ballX = container.clientWidth / 2;
        let ballY = container.clientHeight / 2;
        let ballSpeedX = 2; // Adjust as needed
        let ballSpeedY = 2; // Adjust as needed

        // Update ball position function
        function updateBall() {
          // Update ball position
          ballX += ballSpeedX;
          ballY += ballSpeedY;

          // Check collision with top and bottom walls
          if (
            ballY <= 0 ||
            ballY >= container.clientHeight - ball.clientHeight
          ) {
            ballSpeedY = -ballSpeedY; // Reverse vertical direction
          }

          // Check collision with players
          players.forEach((player) => {
            if (collision(player)) {
              ballSpeedX = -ballSpeedX; // Reverse horizontal direction
            }
          });

          // Check if ball goes out of bounds
          if (ballX <= 0 || ballX >= container.clientWidth - ball.clientWidth) {
            // Reset ball position to center
            ballX = container.clientWidth / 2;
            ballY = container.clientHeight / 2;
            // Reset ball speed (for simplicity)
            ballSpeedX = -ballSpeedX; // Reverse horizontal direction
            ballSpeedY = -ballSpeedY; // Reverse vertical direction
          }

          // Apply position changes to ball element
          ball.style.left = ballX + "px";
          ball.style.top = ballY + "px";

          // Request animation frame for smooth animation
          requestAnimationFrame(updateBall);
        }

        // Collision detection function
        function collision(player) {
          let playerRect = player.getBoundingClientRect();
          let ballRect = ball.getBoundingClientRect();
          return !(
            playerRect.right < ballRect.left ||
            playerRect.left > ballRect.right ||
            playerRect.bottom < ballRect.top ||
            playerRect.top > ballRect.bottom
          );
        }

        // Start the game loop
        updateBall();
      });
    </script>
  </body>
</html>
```
1. please make the line vertical
2. please make the 2 players able to move, player 1 with W and S, player 2 with UP and DOWN 
3. please make there are the big number scoring on each side of the board for the score of each player.
4. please make the players have the bouncing physics of a pong game





this is my current code : 
```
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>KSP - Pong</title>
    <style>
      body {
        margin: 0;
        overflow: hidden; /* Hide scrollbars */
        background-color: black; /* Black background */
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }
      .container-pong {
        position: relative;
        width: 80vw;
        height: 80vh;
        background-color: #111; /* Darker background for the game board */
        border: 2px solid white;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        position: relative;
      }
      .middle-line {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 2px;
        height: 100%;
        background-color: white;
      }
      .player {
        position: absolute;
        width: 10px;
        height: 80px;
        background-color: white;
      }
      .player-left {
        left: 10px; /* Distance from left edge */
      }
      .player-right {
        right: 10px; /* Distance from right edge */
      }
      .ball {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: white;
        border-radius: 50%; /* Round ball */
      }
      .score {
        position: absolute;
        color: white;
        font-size: 48px;
        font-family: Arial, sans-serif;
      }
      .score-left {
        left: calc(50% - 60px);
      }
      .score-right {
        right: calc(50% - 60px);
      }
    </style>
  </head>
  <body>
    <div class="container-pong">
      <div class="middle-line"></div>
      <div class="player player-left"></div>
      <div class="player player-right"></div>
      <div class="ball"></div>
      <div class="score score-left">0</div>
      <div class="score score-right">0</div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const container = document.querySelector(".container-pong");
        const ball = document.querySelector(".ball");
        const players = document.querySelectorAll(".player");
        const scores = [0, 0]; // Scores for player 1 (left) and player 2 (right)
        const scoreElements = document.querySelectorAll(".score");

        const playerSpeed = 5; // Speed of player movement

        // Initial ball position and speed
        let ballX = container.clientWidth / 2;
        let ballY = container.clientHeight / 2;
        let ballSpeedX = 3; // Adjust as needed
        let ballSpeedY = 3; // Adjust as needed

        // Player positions
        let playerLeftY = container.clientHeight / 2 - 40; // Initial position (centered)
        let playerRightY = container.clientHeight / 2 - 40; // Initial position (centered)

        // Update ball position function
        function updateBall() {
          // Update ball position
          ballX += ballSpeedX;
          ballY += ballSpeedY;

          // Check collision with top and bottom walls
          if (
            ballY <= 0 ||
            ballY >= container.clientHeight - ball.clientHeight
          ) {
            ballSpeedY = -ballSpeedY; // Reverse vertical direction
          }

          // Check collision with players
          players.forEach((player, index) => {
            if (collision(player)) {
              ballSpeedX = -ballSpeedX; // Reverse horizontal direction
              // Increase ball speed slightly on each collision (optional)
              ballSpeedX *= 1.05;
              ballSpeedY *= 1.05;
            }
          });

          // Check if ball goes out of bounds
          if (ballX <= 0) {
            // Player 2 (right) scores
            scores[1]++;
            updateScore();
            resetBall();
          } else if (ballX >= container.clientWidth - ball.clientWidth) {
            // Player 1 (left) scores
            scores[0]++;
            updateScore();
            resetBall();
          }

          // Apply position changes to ball element
          ball.style.left = ballX + "px";
          ball.style.top = ballY + "px";

          // Request animation frame for smooth animation
          requestAnimationFrame(updateBall);
        }

        // Update score display
        function updateScore() {
          scoreElements[0].textContent = scores[0];
          scoreElements[1].textContent = scores[1];
        }

        // Reset ball position to center and randomize initial direction
        function resetBall() {
          ballX = container.clientWidth / 2;
          ballY = container.clientHeight / 2;
          ballSpeedX = Math.random() > 0.5 ? 3 : -3; // Random initial direction
          ballSpeedY = Math.random() > 0.5 ? 3 : -3; // Random initial direction
        }

        // Collision detection function
        function collision(player) {
          let playerRect = player.getBoundingClientRect();
          let ballRect = ball.getBoundingClientRect();
          return !(
            playerRect.right < ballRect.left ||
            playerRect.left > ballRect.right ||
            playerRect.bottom < ballRect.top ||
            playerRect.top > ballRect.bottom
          );
        }

        // Event listener for player movement
        document.addEventListener("keydown", function (event) {
          if (event.key === "w") {
            // Move player 1 (left) up
            playerLeftY = Math.max(0, playerLeftY - playerSpeed);
            players[0].style.top = playerLeftY + "px";
          } else if (event.key === "s") {
            // Move player 1 (left) down
            playerLeftY = Math.min(
              container.clientHeight - players[0].clientHeight,
              playerLeftY + playerSpeed
            );
            players[0].style.top = playerLeftY + "px";
          } else if (event.key === "ArrowUp") {
            // Move player 2 (right) up
            playerRightY = Math.max(0, playerRightY - playerSpeed);
            players[1].style.top = playerRightY + "px";
          } else if (event.key === "ArrowDown") {
            // Move player 2 (right) down
            playerRightY = Math.min(
              container.clientHeight - players[1].clientHeight,
              playerRightY + playerSpeed
            );
            players[1].style.top = playerRightY + "px";
          }
        });

        // Start the game loop
        updateBall();
      });
    </script>
  </body>
</html>
```

please make the movement of the players 1 and 2 smoother and better, make it fluid and dynamic

this is my current code : 
